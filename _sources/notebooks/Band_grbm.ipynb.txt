{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "35383240",
   "metadata": {
    "papermill": {
     "duration": 0.009315,
     "end_time": "2021-08-22T16:54:21.990271",
     "exception": false,
     "start_time": "2021-08-22T16:54:21.980956",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Band grbm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "53139feb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:54:22.017595Z",
     "iopub.status.busy": "2021-08-22T16:54:22.016648Z",
     "iopub.status.idle": "2021-08-22T16:54:24.554954Z",
     "shell.execute_reply": "2021-08-22T16:54:24.556198Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.557778,
     "end_time": "2021-08-22T16:54:24.556712",
     "exception": false,
     "start_time": "2021-08-22T16:54:21.998934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c808a7de",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:54:24.579594Z",
     "iopub.status.busy": "2021-08-22T16:54:24.578701Z",
     "iopub.status.idle": "2021-08-22T16:54:24.584995Z",
     "shell.execute_reply": "2021-08-22T16:54:24.585858Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.020431,
     "end_time": "2021-08-22T16:54:24.586118",
     "exception": false,
     "start_time": "2021-08-22T16:54:24.565687",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "789a2b14",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:54:24.607980Z",
     "iopub.status.busy": "2021-08-22T16:54:24.607115Z",
     "iopub.status.idle": "2021-08-22T16:54:24.613719Z",
     "shell.execute_reply": "2021-08-22T16:54:24.614608Z"
    },
    "papermill": {
     "duration": 0.020184,
     "end_time": "2021-08-22T16:54:24.614862",
     "exception": false,
     "start_time": "2021-08-22T16:54:24.594678",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Band_grbm\"\n",
    "wide_energy_range = True\n",
    "x_scale = \"log\"\n",
    "y_scale = \"log\"\n",
    "linear_range = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "00a2cae9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:54:24.639048Z",
     "iopub.status.busy": "2021-08-22T16:54:24.638162Z",
     "iopub.status.idle": "2021-08-22T16:54:24.644661Z",
     "shell.execute_reply": "2021-08-22T16:54:24.645530Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.022162,
     "end_time": "2021-08-22T16:54:24.645792",
     "exception": false,
     "start_time": "2021-08-22T16:54:24.623630",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80028aa3",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.008703,
     "end_time": "2021-08-22T16:54:24.663289",
     "exception": false,
     "start_time": "2021-08-22T16:54:24.654586",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "aabc5b8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:54:24.693152Z",
     "iopub.status.busy": "2021-08-22T16:54:24.692183Z",
     "iopub.status.idle": "2021-08-22T16:54:24.696778Z",
     "shell.execute_reply": "2021-08-22T16:54:24.697502Z"
    },
    "papermill": {
     "duration": 0.025284,
     "end_time": "2021-08-22T16:54:24.697784",
     "exception": false,
     "start_time": "2021-08-22T16:54:24.672500",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: Band model from Band et al., 1993, parametrized with the cutoff energy</li>\n",
       "\n",
       "<li>formula: $  $</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>K: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.0001</li>\n",
       "\n",
       "<li>desc: Differential flux at the pivot energy</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: True</li>\n",
       "\n",
       "<li>delta: 1e-05</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>alpha: \n",
       "<ul>\n",
       "\n",
       "<li>value: -1.0</li>\n",
       "\n",
       "<li>desc: low-energy photon index</li>\n",
       "\n",
       "<li>min_value: -1.5</li>\n",
       "\n",
       "<li>max_value: 3.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>xc: \n",
       "<ul>\n",
       "\n",
       "<li>value: 500.0</li>\n",
       "\n",
       "<li>desc: cutoff of exp</li>\n",
       "\n",
       "<li>min_value: 10.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 50.0</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>beta: \n",
       "<ul>\n",
       "\n",
       "<li>value: -2.0</li>\n",
       "\n",
       "<li>desc: high-energy photon index</li>\n",
       "\n",
       "<li>min_value: -5.0</li>\n",
       "\n",
       "<li>max_value: -1.6</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.2</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>piv: \n",
       "<ul>\n",
       "\n",
       "<li>value: 100.0</li>\n",
       "\n",
       "<li>desc: pivot energy</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 10.0</li>\n",
       "\n",
       "<li>free: False</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: Band model from Band et al., 1993, parametrized with the cutoff energy\n",
       "  * formula: $  $\n",
       "  * parameters:\n",
       "    * K:\n",
       "      * value: 0.0001\n",
       "      * desc: Differential flux at the pivot energy\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: true\n",
       "      * delta: 1.0e-05\n",
       "      * free: true\n",
       "    * alpha:\n",
       "      * value: -1.0\n",
       "      * desc: low-energy photon index\n",
       "      * min_value: -1.5\n",
       "      * max_value: 3.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * xc:\n",
       "      * value: 500.0\n",
       "      * desc: cutoff of exp\n",
       "      * min_value: 10.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 50.0\n",
       "      * free: true\n",
       "    * beta:\n",
       "      * value: -2.0\n",
       "      * desc: high-energy photon index\n",
       "      * min_value: -5.0\n",
       "      * max_value: -1.6\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.2\n",
       "      * free: true\n",
       "    * piv:\n",
       "      * value: 100.0\n",
       "      * desc: pivot energy\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 10.0\n",
       "      * free: false"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77b916bb",
   "metadata": {
    "papermill": {
     "duration": 0.009632,
     "end_time": "2021-08-22T16:54:24.717162",
     "exception": false,
     "start_time": "2021-08-22T16:54:24.707530",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3c764617",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:54:24.774265Z",
     "iopub.status.busy": "2021-08-22T16:54:24.773377Z",
     "iopub.status.idle": "2021-08-22T16:54:25.662486Z",
     "shell.execute_reply": "2021-08-22T16:54:25.663352Z"
    },
    "papermill": {
     "duration": 0.936857,
     "end_time": "2021-08-22T16:54:25.663624",
     "exception": false,
     "start_time": "2021-08-22T16:54:24.726767",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b965967",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.010908,
     "end_time": "2021-08-22T16:54:25.685240",
     "exception": false,
     "start_time": "2021-08-22T16:54:25.674332",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "88e72a29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:54:25.776514Z",
     "iopub.status.busy": "2021-08-22T16:54:25.753534Z",
     "iopub.status.idle": "2021-08-22T16:54:26.274157Z",
     "shell.execute_reply": "2021-08-22T16:54:26.275023Z"
    },
    "papermill": {
     "duration": 0.579666,
     "end_time": "2021-08-22T16:54:26.275298",
     "exception": false,
     "start_time": "2021-08-22T16:54:25.695632",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a6aa659",
   "metadata": {
    "papermill": {
     "duration": 0.011365,
     "end_time": "2021-08-22T16:54:26.298287",
     "exception": false,
     "start_time": "2021-08-22T16:54:26.286922",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "87aaeb21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:54:26.328908Z",
     "iopub.status.busy": "2021-08-22T16:54:26.328010Z",
     "iopub.status.idle": "2021-08-22T16:54:26.965999Z",
     "shell.execute_reply": "2021-08-22T16:54:26.966929Z"
    },
    "papermill": {
     "duration": 0.657538,
     "end_time": "2021-08-22T16:54:26.967211",
     "exception": false,
     "start_time": "2021-08-22T16:54:26.309673",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.444065,
   "end_time": "2021-08-22T16:54:27.434998",
   "environment_variables": {},
   "exception": null,
   "input_path": "Band_grbm.ipynb",
   "output_path": "../docs/notebooks/Band_grbm.ipynb",
   "parameters": {
    "func_name": "Band_grbm",
    "linear_range": false,
    "wide_energy_range": true,
    "x_scale": "log",
    "y_scale": "log"
   },
   "start_time": "2021-08-22T16:54:20.990933",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}