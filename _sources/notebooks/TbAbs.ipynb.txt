{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "496cd372",
   "metadata": {
    "papermill": {
     "duration": 0.076896,
     "end_time": "2021-08-23T04:52:54.175118",
     "exception": false,
     "start_time": "2021-08-23T04:52:54.098222",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# TbAbs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d9fc34bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T04:52:54.206587Z",
     "iopub.status.busy": "2021-08-23T04:52:54.205528Z",
     "iopub.status.idle": "2021-08-23T04:52:56.917284Z",
     "shell.execute_reply": "2021-08-23T04:52:56.917891Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.734041,
     "end_time": "2021-08-23T04:52:56.918265",
     "exception": false,
     "start_time": "2021-08-23T04:52:54.184224",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "15210080",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T04:52:56.941431Z",
     "iopub.status.busy": "2021-08-23T04:52:56.940533Z",
     "iopub.status.idle": "2021-08-23T04:52:56.946880Z",
     "shell.execute_reply": "2021-08-23T04:52:56.947598Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.020704,
     "end_time": "2021-08-23T04:52:56.947867",
     "exception": false,
     "start_time": "2021-08-23T04:52:56.927163",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2ed4894c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T04:52:56.970217Z",
     "iopub.status.busy": "2021-08-23T04:52:56.969301Z",
     "iopub.status.idle": "2021-08-23T04:52:56.975890Z",
     "shell.execute_reply": "2021-08-23T04:52:56.976484Z"
    },
    "papermill": {
     "duration": 0.020348,
     "end_time": "2021-08-23T04:52:56.976755",
     "exception": false,
     "start_time": "2021-08-23T04:52:56.956407",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"TbAbs\"\n",
    "wide_energy_range = False\n",
    "x_scale = \"log\"\n",
    "y_scale = \"log\"\n",
    "linear_range = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "70870db1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T04:52:57.017287Z",
     "iopub.status.busy": "2021-08-23T04:52:57.000647Z",
     "iopub.status.idle": "2021-08-23T04:52:57.023836Z",
     "shell.execute_reply": "2021-08-23T04:52:57.024575Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.039431,
     "end_time": "2021-08-23T04:52:57.024864",
     "exception": false,
     "start_time": "2021-08-23T04:52:56.985433",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e33a976e",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.008951,
     "end_time": "2021-08-23T04:52:57.043389",
     "exception": false,
     "start_time": "2021-08-23T04:52:57.034438",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "81cafe42",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T04:52:57.072579Z",
     "iopub.status.busy": "2021-08-23T04:52:57.066300Z",
     "iopub.status.idle": "2021-08-23T04:52:57.076852Z",
     "shell.execute_reply": "2021-08-23T04:52:57.077475Z"
    },
    "papermill": {
     "duration": 0.024064,
     "end_time": "2021-08-23T04:52:57.077756",
     "exception": false,
     "start_time": "2021-08-23T04:52:57.053692",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: Photometric absorption (Tbabs implementation), f(E) = exp(- NH * sigma(E)) contributed by Dominique Eckert</li>\n",
       "\n",
       "<li>formula: $n.a.$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>NH: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: absorbing column density in units of 1e22 particles per cm^2</li>\n",
       "\n",
       "<li>min_value: 0.0001</li>\n",
       "\n",
       "<li>max_value: 10000.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: True</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>redshift: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.0</li>\n",
       "\n",
       "<li>desc: the redshift of the source</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: 15.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: False</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: Photometric absorption (Tbabs implementation), f(E) = exp(- NH * sigma(E))\n",
       "    * contributed by Dominique Eckert\n",
       "  * formula: $n.a.$\n",
       "  * parameters:\n",
       "    * NH:\n",
       "      * value: 1.0\n",
       "      * desc: absorbing column density in units of 1e22 particles per cm^2\n",
       "      * min_value: 0.0001\n",
       "      * max_value: 10000.0\n",
       "      * unit: ''\n",
       "      * is_normalization: true\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * redshift:\n",
       "      * value: 0.0\n",
       "      * desc: the redshift of the source\n",
       "      * min_value: 0.0\n",
       "      * max_value: 15.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: false"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "876d3dc2",
   "metadata": {
    "papermill": {
     "duration": 0.00947,
     "end_time": "2021-08-23T04:52:57.097090",
     "exception": false,
     "start_time": "2021-08-23T04:52:57.087620",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b89fe1fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T04:52:57.145191Z",
     "iopub.status.busy": "2021-08-23T04:52:57.123673Z",
     "iopub.status.idle": "2021-08-23T04:52:59.580731Z",
     "shell.execute_reply": "2021-08-23T04:52:59.580051Z"
    },
    "papermill": {
     "duration": 2.474377,
     "end_time": "2021-08-23T04:52:59.581036",
     "exception": false,
     "start_time": "2021-08-23T04:52:57.106659",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93945911",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.010621,
     "end_time": "2021-08-23T04:52:59.603128",
     "exception": false,
     "start_time": "2021-08-23T04:52:59.592507",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "70618ff3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T04:52:59.686705Z",
     "iopub.status.busy": "2021-08-23T04:52:59.667603Z",
     "iopub.status.idle": "2021-08-23T04:53:00.260372Z",
     "shell.execute_reply": "2021-08-23T04:53:00.261425Z"
    },
    "papermill": {
     "duration": 0.647588,
     "end_time": "2021-08-23T04:53:00.261726",
     "exception": false,
     "start_time": "2021-08-23T04:52:59.614138",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "52b747de",
   "metadata": {
    "papermill": {
     "duration": 0.011659,
     "end_time": "2021-08-23T04:53:00.292077",
     "exception": false,
     "start_time": "2021-08-23T04:53:00.280418",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c4aa7919",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T04:53:00.346764Z",
     "iopub.status.busy": "2021-08-23T04:53:00.321689Z",
     "iopub.status.idle": "2021-08-23T04:53:00.928921Z",
     "shell.execute_reply": "2021-08-23T04:53:00.929522Z"
    },
    "papermill": {
     "duration": 0.62645,
     "end_time": "2021-08-23T04:53:00.929796",
     "exception": false,
     "start_time": "2021-08-23T04:53:00.303346",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8.608243,
   "end_time": "2021-08-23T04:53:01.466500",
   "environment_variables": {},
   "exception": null,
   "input_path": "TbAbs.ipynb",
   "output_path": "../docs/notebooks/TbAbs.ipynb",
   "parameters": {
    "func_name": "TbAbs",
    "linear_range": false,
    "wide_energy_range": false,
    "x_scale": "log",
    "y_scale": "log"
   },
   "start_time": "2021-08-23T04:52:52.858257",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}