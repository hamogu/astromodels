{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "15d5764a",
   "metadata": {
    "papermill": {
     "duration": 0.009782,
     "end_time": "2021-08-22T16:53:33.886494",
     "exception": false,
     "start_time": "2021-08-22T16:53:33.876712",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Cutoff powerlaw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "93f8e1f1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:53:33.913609Z",
     "iopub.status.busy": "2021-08-22T16:53:33.912727Z",
     "iopub.status.idle": "2021-08-22T16:53:36.332111Z",
     "shell.execute_reply": "2021-08-22T16:53:36.332799Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.438099,
     "end_time": "2021-08-22T16:53:36.333242",
     "exception": false,
     "start_time": "2021-08-22T16:53:33.895143",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4c3dd9e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:53:36.356329Z",
     "iopub.status.busy": "2021-08-22T16:53:36.355350Z",
     "iopub.status.idle": "2021-08-22T16:53:36.358420Z",
     "shell.execute_reply": "2021-08-22T16:53:36.357872Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.016301,
     "end_time": "2021-08-22T16:53:36.358665",
     "exception": false,
     "start_time": "2021-08-22T16:53:36.342364",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c4293550",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:53:36.380793Z",
     "iopub.status.busy": "2021-08-22T16:53:36.379833Z",
     "iopub.status.idle": "2021-08-22T16:53:36.382971Z",
     "shell.execute_reply": "2021-08-22T16:53:36.382209Z"
    },
    "papermill": {
     "duration": 0.01592,
     "end_time": "2021-08-22T16:53:36.383211",
     "exception": false,
     "start_time": "2021-08-22T16:53:36.367291",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Cutoff_powerlaw\"\n",
    "wide_energy_range = True\n",
    "x_scale = \"log\"\n",
    "y_scale = \"log\"\n",
    "linear_range = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dd87b7e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:53:36.407841Z",
     "iopub.status.busy": "2021-08-22T16:53:36.406853Z",
     "iopub.status.idle": "2021-08-22T16:53:36.409341Z",
     "shell.execute_reply": "2021-08-22T16:53:36.410091Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.018262,
     "end_time": "2021-08-22T16:53:36.410350",
     "exception": false,
     "start_time": "2021-08-22T16:53:36.392088",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b37675b3",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.008979,
     "end_time": "2021-08-22T16:53:36.428161",
     "exception": false,
     "start_time": "2021-08-22T16:53:36.419182",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0f89505a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:53:36.457021Z",
     "iopub.status.busy": "2021-08-22T16:53:36.455979Z",
     "iopub.status.idle": "2021-08-22T16:53:36.459630Z",
     "shell.execute_reply": "2021-08-22T16:53:36.460224Z"
    },
    "papermill": {
     "duration": 0.023426,
     "end_time": "2021-08-22T16:53:36.460511",
     "exception": false,
     "start_time": "2021-08-22T16:53:36.437085",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A power law multiplied by an exponential cutoff</li>\n",
       "\n",
       "<li>formula: $ K~\\frac{x}{piv}^{index}~\\exp{-x/xc} $</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>K: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: Normalization (differential flux at the pivot value)</li>\n",
       "\n",
       "<li>min_value: 1e-30</li>\n",
       "\n",
       "<li>max_value: 1000.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: True</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>piv: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: Pivot value</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: False</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>index: \n",
       "<ul>\n",
       "\n",
       "<li>value: -2.0</li>\n",
       "\n",
       "<li>desc: Photon index</li>\n",
       "\n",
       "<li>min_value: -10.0</li>\n",
       "\n",
       "<li>max_value: 10.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.2</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>xc: \n",
       "<ul>\n",
       "\n",
       "<li>value: 10.0</li>\n",
       "\n",
       "<li>desc: Cutoff energy</li>\n",
       "\n",
       "<li>min_value: 1.0</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 1.0</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A power law multiplied by an exponential cutoff\n",
       "  * formula: $ K~\\frac{x}{piv}^{index}~\\exp{-x/xc} $\n",
       "  * parameters:\n",
       "    * K:\n",
       "      * value: 1.0\n",
       "      * desc: Normalization (differential flux at the pivot value)\n",
       "      * min_value: 1.0e-30\n",
       "      * max_value: 1000.0\n",
       "      * unit: ''\n",
       "      * is_normalization: true\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * piv:\n",
       "      * value: 1.0\n",
       "      * desc: Pivot value\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: false\n",
       "    * index:\n",
       "      * value: -2.0\n",
       "      * desc: Photon index\n",
       "      * min_value: -10.0\n",
       "      * max_value: 10.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.2\n",
       "      * free: true\n",
       "    * xc:\n",
       "      * value: 10.0\n",
       "      * desc: Cutoff energy\n",
       "      * min_value: 1.0\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 1.0\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff32a584",
   "metadata": {
    "papermill": {
     "duration": 0.009706,
     "end_time": "2021-08-22T16:53:36.480017",
     "exception": false,
     "start_time": "2021-08-22T16:53:36.470311",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6e79ef4f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:53:36.508277Z",
     "iopub.status.busy": "2021-08-22T16:53:36.507394Z",
     "iopub.status.idle": "2021-08-22T16:53:37.734585Z",
     "shell.execute_reply": "2021-08-22T16:53:37.735463Z"
    },
    "papermill": {
     "duration": 1.246136,
     "end_time": "2021-08-22T16:53:37.735732",
     "exception": false,
     "start_time": "2021-08-22T16:53:36.489596",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a03e75e3",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.010957,
     "end_time": "2021-08-22T16:53:37.757505",
     "exception": false,
     "start_time": "2021-08-22T16:53:37.746548",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0c0f38e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:53:37.809591Z",
     "iopub.status.busy": "2021-08-22T16:53:37.808524Z",
     "iopub.status.idle": "2021-08-22T16:53:38.349608Z",
     "shell.execute_reply": "2021-08-22T16:53:38.350312Z"
    },
    "papermill": {
     "duration": 0.581904,
     "end_time": "2021-08-22T16:53:38.350587",
     "exception": false,
     "start_time": "2021-08-22T16:53:37.768683",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0537bbc",
   "metadata": {
    "papermill": {
     "duration": 0.011346,
     "end_time": "2021-08-22T16:53:38.373698",
     "exception": false,
     "start_time": "2021-08-22T16:53:38.362352",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "fbe8458d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T16:53:38.405238Z",
     "iopub.status.busy": "2021-08-22T16:53:38.404293Z",
     "iopub.status.idle": "2021-08-22T16:53:38.973491Z",
     "shell.execute_reply": "2021-08-22T16:53:38.974379Z"
    },
    "papermill": {
     "duration": 0.589617,
     "end_time": "2021-08-22T16:53:38.974651",
     "exception": false,
     "start_time": "2021-08-22T16:53:38.385034",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.708826,
   "end_time": "2021-08-22T16:53:39.434799",
   "environment_variables": {},
   "exception": null,
   "input_path": "Cutoff_powerlaw.ipynb",
   "output_path": "../docs/notebooks/Cutoff_powerlaw.ipynb",
   "parameters": {
    "func_name": "Cutoff_powerlaw",
    "linear_range": false,
    "wide_energy_range": true,
    "x_scale": "log",
    "y_scale": "log"
   },
   "start_time": "2021-08-22T16:53:32.725973",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}