{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fcb48870",
   "metadata": {
    "papermill": {
     "duration": 0.009308,
     "end_time": "2021-08-23T07:40:40.143048",
     "exception": false,
     "start_time": "2021-08-23T07:40:40.133740",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Powerlaw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b80b5c7f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T07:40:40.170556Z",
     "iopub.status.busy": "2021-08-23T07:40:40.169561Z",
     "iopub.status.idle": "2021-08-23T07:40:42.844630Z",
     "shell.execute_reply": "2021-08-23T07:40:42.845233Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.693935,
     "end_time": "2021-08-23T07:40:42.845628",
     "exception": false,
     "start_time": "2021-08-23T07:40:40.151693",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "cc5a9739",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T07:40:42.868738Z",
     "iopub.status.busy": "2021-08-23T07:40:42.867857Z",
     "iopub.status.idle": "2021-08-23T07:40:42.874154Z",
     "shell.execute_reply": "2021-08-23T07:40:42.875058Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.020573,
     "end_time": "2021-08-23T07:40:42.875312",
     "exception": false,
     "start_time": "2021-08-23T07:40:42.854739",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "44addb4e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T07:40:42.897083Z",
     "iopub.status.busy": "2021-08-23T07:40:42.896149Z",
     "iopub.status.idle": "2021-08-23T07:40:42.898681Z",
     "shell.execute_reply": "2021-08-23T07:40:42.899251Z"
    },
    "papermill": {
     "duration": 0.01579,
     "end_time": "2021-08-23T07:40:42.899502",
     "exception": false,
     "start_time": "2021-08-23T07:40:42.883712",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Powerlaw\"\n",
    "wide_energy_range = True\n",
    "x_scale = \"log\"\n",
    "y_scale = \"log\"\n",
    "linear_range = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cab7e3b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T07:40:42.924023Z",
     "iopub.status.busy": "2021-08-23T07:40:42.923144Z",
     "iopub.status.idle": "2021-08-23T07:40:42.929643Z",
     "shell.execute_reply": "2021-08-23T07:40:42.930513Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.022507,
     "end_time": "2021-08-23T07:40:42.930762",
     "exception": false,
     "start_time": "2021-08-23T07:40:42.908255",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f92871f7",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.008831,
     "end_time": "2021-08-23T07:40:42.948125",
     "exception": false,
     "start_time": "2021-08-23T07:40:42.939294",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6d0ab43f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T07:40:42.976335Z",
     "iopub.status.busy": "2021-08-23T07:40:42.975388Z",
     "iopub.status.idle": "2021-08-23T07:40:42.980035Z",
     "shell.execute_reply": "2021-08-23T07:40:42.980749Z"
    },
    "papermill": {
     "duration": 0.02406,
     "end_time": "2021-08-23T07:40:42.981005",
     "exception": false,
     "start_time": "2021-08-23T07:40:42.956945",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A simple power-law</li>\n",
       "\n",
       "<li>formula: $ K~\\frac{x}{piv}^{index} $</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>K: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: Normalization (differential flux at the pivot value)</li>\n",
       "\n",
       "<li>min_value: 1e-30</li>\n",
       "\n",
       "<li>max_value: 1000.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: True</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>piv: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: Pivot value</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: False</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>index: \n",
       "<ul>\n",
       "\n",
       "<li>value: -2.01</li>\n",
       "\n",
       "<li>desc: Photon index</li>\n",
       "\n",
       "<li>min_value: -10.0</li>\n",
       "\n",
       "<li>max_value: 10.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.20099999999999998</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A simple power-law\n",
       "  * formula: $ K~\\frac{x}{piv}^{index} $\n",
       "  * parameters:\n",
       "    * K:\n",
       "      * value: 1.0\n",
       "      * desc: Normalization (differential flux at the pivot value)\n",
       "      * min_value: 1.0e-30\n",
       "      * max_value: 1000.0\n",
       "      * unit: ''\n",
       "      * is_normalization: true\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * piv:\n",
       "      * value: 1.0\n",
       "      * desc: Pivot value\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: false\n",
       "    * index:\n",
       "      * value: -2.01\n",
       "      * desc: Photon index\n",
       "      * min_value: -10.0\n",
       "      * max_value: 10.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.20099999999999998\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb5e530b",
   "metadata": {
    "papermill": {
     "duration": 0.009403,
     "end_time": "2021-08-23T07:40:43.000193",
     "exception": false,
     "start_time": "2021-08-23T07:40:42.990790",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "56d5340f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T07:40:43.028804Z",
     "iopub.status.busy": "2021-08-23T07:40:43.027913Z",
     "iopub.status.idle": "2021-08-23T07:40:44.249819Z",
     "shell.execute_reply": "2021-08-23T07:40:44.250355Z"
    },
    "papermill": {
     "duration": 1.240823,
     "end_time": "2021-08-23T07:40:44.250669",
     "exception": false,
     "start_time": "2021-08-23T07:40:43.009846",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7931b5e8",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.011071,
     "end_time": "2021-08-23T07:40:44.273059",
     "exception": false,
     "start_time": "2021-08-23T07:40:44.261988",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "168d36b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T07:40:44.441469Z",
     "iopub.status.busy": "2021-08-23T07:40:44.311626Z",
     "iopub.status.idle": "2021-08-23T07:40:44.987280Z",
     "shell.execute_reply": "2021-08-23T07:40:44.987879Z"
    },
    "papermill": {
     "duration": 0.704519,
     "end_time": "2021-08-23T07:40:44.988163",
     "exception": false,
     "start_time": "2021-08-23T07:40:44.283644",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c03d85b",
   "metadata": {
    "papermill": {
     "duration": 0.011766,
     "end_time": "2021-08-23T07:40:45.011691",
     "exception": false,
     "start_time": "2021-08-23T07:40:44.999925",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "035642ee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T07:40:45.079698Z",
     "iopub.status.busy": "2021-08-23T07:40:45.078800Z",
     "iopub.status.idle": "2021-08-23T07:40:45.569566Z",
     "shell.execute_reply": "2021-08-23T07:40:45.570097Z"
    },
    "papermill": {
     "duration": 0.547244,
     "end_time": "2021-08-23T07:40:45.570382",
     "exception": false,
     "start_time": "2021-08-23T07:40:45.023138",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.900836,
   "end_time": "2021-08-23T07:40:46.177569",
   "environment_variables": {},
   "exception": null,
   "input_path": "Powerlaw.ipynb",
   "output_path": "../docs/notebooks/Powerlaw.ipynb",
   "parameters": {
    "func_name": "Powerlaw",
    "linear_range": false,
    "wide_energy_range": true,
    "x_scale": "log",
    "y_scale": "log"
   },
   "start_time": "2021-08-23T07:40:39.276733",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}