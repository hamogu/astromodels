{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a3b96910",
   "metadata": {
    "papermill": {
     "duration": 0.009119,
     "end_time": "2021-08-22T18:07:43.802687",
     "exception": false,
     "start_time": "2021-08-22T18:07:43.793568",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# PhAbs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "35d4c640",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:07:43.829904Z",
     "iopub.status.busy": "2021-08-22T18:07:43.828967Z",
     "iopub.status.idle": "2021-08-22T18:07:46.235026Z",
     "shell.execute_reply": "2021-08-22T18:07:46.235613Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.424669,
     "end_time": "2021-08-22T18:07:46.235975",
     "exception": false,
     "start_time": "2021-08-22T18:07:43.811306",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e09a18e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:07:46.258273Z",
     "iopub.status.busy": "2021-08-22T18:07:46.257378Z",
     "iopub.status.idle": "2021-08-22T18:07:46.263847Z",
     "shell.execute_reply": "2021-08-22T18:07:46.264416Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.020238,
     "end_time": "2021-08-22T18:07:46.264728",
     "exception": false,
     "start_time": "2021-08-22T18:07:46.244490",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bec6261e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:07:46.286384Z",
     "iopub.status.busy": "2021-08-22T18:07:46.285470Z",
     "iopub.status.idle": "2021-08-22T18:07:46.291936Z",
     "shell.execute_reply": "2021-08-22T18:07:46.292536Z"
    },
    "papermill": {
     "duration": 0.019488,
     "end_time": "2021-08-22T18:07:46.292793",
     "exception": false,
     "start_time": "2021-08-22T18:07:46.273305",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"PhAbs\"\n",
    "wide_energy_range = False\n",
    "x_scale = \"log\"\n",
    "y_scale = \"log\"\n",
    "linear_range = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "48b7da5a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:07:46.317277Z",
     "iopub.status.busy": "2021-08-22T18:07:46.316368Z",
     "iopub.status.idle": "2021-08-22T18:07:46.335459Z",
     "shell.execute_reply": "2021-08-22T18:07:46.336100Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.034754,
     "end_time": "2021-08-22T18:07:46.336395",
     "exception": false,
     "start_time": "2021-08-22T18:07:46.301641",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a43af12a",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.008762,
     "end_time": "2021-08-22T18:07:46.354446",
     "exception": false,
     "start_time": "2021-08-22T18:07:46.345684",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "469c2686",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:07:46.391318Z",
     "iopub.status.busy": "2021-08-22T18:07:46.390319Z",
     "iopub.status.idle": "2021-08-22T18:07:46.394077Z",
     "shell.execute_reply": "2021-08-22T18:07:46.394803Z"
    },
    "papermill": {
     "duration": 0.031573,
     "end_time": "2021-08-22T18:07:46.395078",
     "exception": false,
     "start_time": "2021-08-22T18:07:46.363505",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: Photometric absorption (phabs implementation), f(E) = exp(- NH * sigma(E)) contributed by Dominique Eckert</li>\n",
       "\n",
       "<li>formula: $n.a.$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>NH: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: absorbing column density in units of 1e22 particles per cm^2</li>\n",
       "\n",
       "<li>min_value: 0.0001</li>\n",
       "\n",
       "<li>max_value: 10000.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>redshift: \n",
       "<ul>\n",
       "\n",
       "<li>value: 0.0</li>\n",
       "\n",
       "<li>desc: the redshift of the source</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: 15.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: False</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: Photometric absorption (phabs implementation), f(E) = exp(- NH * sigma(E))\n",
       "    * contributed by Dominique Eckert\n",
       "  * formula: $n.a.$\n",
       "  * parameters:\n",
       "    * NH:\n",
       "      * value: 1.0\n",
       "      * desc: absorbing column density in units of 1e22 particles per cm^2\n",
       "      * min_value: 0.0001\n",
       "      * max_value: 10000.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * redshift:\n",
       "      * value: 0.0\n",
       "      * desc: the redshift of the source\n",
       "      * min_value: 0.0\n",
       "      * max_value: 15.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: false"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ffed8942",
   "metadata": {
    "papermill": {
     "duration": 0.010409,
     "end_time": "2021-08-22T18:07:46.414988",
     "exception": false,
     "start_time": "2021-08-22T18:07:46.404579",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5e011a24",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:07:46.443216Z",
     "iopub.status.busy": "2021-08-22T18:07:46.441359Z",
     "iopub.status.idle": "2021-08-22T18:07:48.672567Z",
     "shell.execute_reply": "2021-08-22T18:07:48.673151Z"
    },
    "papermill": {
     "duration": 2.249047,
     "end_time": "2021-08-22T18:07:48.673435",
     "exception": false,
     "start_time": "2021-08-22T18:07:46.424388",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6a826a9",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.010491,
     "end_time": "2021-08-22T18:07:48.694516",
     "exception": false,
     "start_time": "2021-08-22T18:07:48.684025",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2b0c080d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:07:48.770845Z",
     "iopub.status.busy": "2021-08-22T18:07:48.769959Z",
     "iopub.status.idle": "2021-08-22T18:07:49.223152Z",
     "shell.execute_reply": "2021-08-22T18:07:49.223750Z"
    },
    "papermill": {
     "duration": 0.519569,
     "end_time": "2021-08-22T18:07:49.224041",
     "exception": false,
     "start_time": "2021-08-22T18:07:48.704472",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72a1e19c",
   "metadata": {
    "papermill": {
     "duration": 0.011266,
     "end_time": "2021-08-22T18:07:49.246759",
     "exception": false,
     "start_time": "2021-08-22T18:07:49.235493",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "36aa7db7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:07:49.295852Z",
     "iopub.status.busy": "2021-08-22T18:07:49.275651Z",
     "iopub.status.idle": "2021-08-22T18:07:49.846400Z",
     "shell.execute_reply": "2021-08-22T18:07:49.846982Z"
    },
    "papermill": {
     "duration": 0.589787,
     "end_time": "2021-08-22T18:07:49.847264",
     "exception": false,
     "start_time": "2021-08-22T18:07:49.257477",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.460115,
   "end_time": "2021-08-22T18:07:50.329285",
   "environment_variables": {},
   "exception": null,
   "input_path": "PhAbs.ipynb",
   "output_path": "../docs/notebooks/PhAbs.ipynb",
   "parameters": {
    "func_name": "PhAbs",
    "linear_range": false,
    "wide_energy_range": false,
    "x_scale": "log",
    "y_scale": "log"
   },
   "start_time": "2021-08-22T18:07:42.869170",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}