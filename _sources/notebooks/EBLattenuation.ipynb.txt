{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7420d6ba",
   "metadata": {
    "papermill": {
     "duration": 0.009355,
     "end_time": "2021-08-23T05:22:17.173542",
     "exception": false,
     "start_time": "2021-08-23T05:22:17.164187",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# EBLattenuation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "abf8030d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T05:22:17.200287Z",
     "iopub.status.busy": "2021-08-23T05:22:17.199383Z",
     "iopub.status.idle": "2021-08-23T05:22:19.667232Z",
     "shell.execute_reply": "2021-08-23T05:22:19.667982Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.486262,
     "end_time": "2021-08-23T05:22:19.668385",
     "exception": false,
     "start_time": "2021-08-23T05:22:17.182123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "19d24608",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T05:22:19.691492Z",
     "iopub.status.busy": "2021-08-23T05:22:19.690611Z",
     "iopub.status.idle": "2021-08-23T05:22:19.697221Z",
     "shell.execute_reply": "2021-08-23T05:22:19.697799Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.020581,
     "end_time": "2021-08-23T05:22:19.698060",
     "exception": false,
     "start_time": "2021-08-23T05:22:19.677479",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fac499d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T05:22:19.719911Z",
     "iopub.status.busy": "2021-08-23T05:22:19.718995Z",
     "iopub.status.idle": "2021-08-23T05:22:19.725560Z",
     "shell.execute_reply": "2021-08-23T05:22:19.726149Z"
    },
    "papermill": {
     "duration": 0.020047,
     "end_time": "2021-08-23T05:22:19.726418",
     "exception": false,
     "start_time": "2021-08-23T05:22:19.706371",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"EBLattenuation\"\n",
    "wide_energy_range = True\n",
    "x_scale = \"log\"\n",
    "y_scale = \"log\"\n",
    "linear_range = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bf4af7ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T05:22:19.760906Z",
     "iopub.status.busy": "2021-08-23T05:22:19.750698Z",
     "iopub.status.idle": "2021-08-23T05:22:19.891068Z",
     "shell.execute_reply": "2021-08-23T05:22:19.891691Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.156567,
     "end_time": "2021-08-23T05:22:19.891980",
     "exception": false,
     "start_time": "2021-08-23T05:22:19.735413",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb760d10",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.008737,
     "end_time": "2021-08-23T05:22:19.909911",
     "exception": false,
     "start_time": "2021-08-23T05:22:19.901174",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4dd9c855",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T05:22:19.937800Z",
     "iopub.status.busy": "2021-08-23T05:22:19.936866Z",
     "iopub.status.idle": "2021-08-23T05:22:19.944332Z",
     "shell.execute_reply": "2021-08-23T05:22:19.945038Z"
    },
    "papermill": {
     "duration": 0.026628,
     "end_time": "2021-08-23T05:22:19.945316",
     "exception": false,
     "start_time": "2021-08-23T05:22:19.918688",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: Attenuation factor for absorption in the extragalactic background light (EBL) , to be used for extragalactic source spectra. Based on package \"ebltable\" by Manuel Meyer, https://github.com/me-manu/ebltable .</li>\n",
       "\n",
       "<li>formula: not available</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>redshift: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: redshift of the source</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: False</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>attenuation: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: scaling factor for the strength of attenuation</li>\n",
       "\n",
       "<li>min_value: 0.0</li>\n",
       "\n",
       "<li>max_value: 10.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: False</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: Attenuation factor for absorption in the extragalactic background light\n",
       "    * (EBL) , to be used for extragalactic source spectra. Based on package \"ebltable\"\n",
       "    * by Manuel Meyer, https://github.com/me-manu/ebltable .\n",
       "  * formula: not available\n",
       "  * parameters:\n",
       "    * redshift:\n",
       "      * value: 1.0\n",
       "      * desc: redshift of the source\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: false\n",
       "    * attenuation:\n",
       "      * value: 1.0\n",
       "      * desc: scaling factor for the strength of attenuation\n",
       "      * min_value: 0.0\n",
       "      * max_value: 10.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: false"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e75db221",
   "metadata": {
    "papermill": {
     "duration": 0.009307,
     "end_time": "2021-08-23T05:22:19.964082",
     "exception": false,
     "start_time": "2021-08-23T05:22:19.954775",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f442b742",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T05:22:20.013807Z",
     "iopub.status.busy": "2021-08-23T05:22:20.012894Z",
     "iopub.status.idle": "2021-08-23T05:22:21.413575Z",
     "shell.execute_reply": "2021-08-23T05:22:21.414316Z"
    },
    "papermill": {
     "duration": 1.441175,
     "end_time": "2021-08-23T05:22:21.414597",
     "exception": false,
     "start_time": "2021-08-23T05:22:19.973422",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96157065",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.010253,
     "end_time": "2021-08-23T05:22:21.435482",
     "exception": false,
     "start_time": "2021-08-23T05:22:21.425229",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fc10bdc1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T05:22:21.482433Z",
     "iopub.status.busy": "2021-08-23T05:22:21.462851Z",
     "iopub.status.idle": "2021-08-23T05:22:22.068953Z",
     "shell.execute_reply": "2021-08-23T05:22:22.069736Z"
    },
    "papermill": {
     "duration": 0.624371,
     "end_time": "2021-08-23T05:22:22.070020",
     "exception": false,
     "start_time": "2021-08-23T05:22:21.445649",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "694821b9",
   "metadata": {
    "papermill": {
     "duration": 0.011065,
     "end_time": "2021-08-23T05:22:22.092959",
     "exception": false,
     "start_time": "2021-08-23T05:22:22.081894",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d9cc35c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-23T05:22:22.142267Z",
     "iopub.status.busy": "2021-08-23T05:22:22.141378Z",
     "iopub.status.idle": "2021-08-23T05:22:22.870917Z",
     "shell.execute_reply": "2021-08-23T05:22:22.871509Z"
    },
    "papermill": {
     "duration": 0.767962,
     "end_time": "2021-08-23T05:22:22.871796",
     "exception": false,
     "start_time": "2021-08-23T05:22:22.103834",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.128244,
   "end_time": "2021-08-23T05:22:23.443294",
   "environment_variables": {},
   "exception": null,
   "input_path": "EBLattenuation.ipynb",
   "output_path": "../docs/notebooks/EBLattenuation.ipynb",
   "parameters": {
    "func_name": "EBLattenuation",
    "linear_range": false,
    "wide_energy_range": true,
    "x_scale": "log",
    "y_scale": "log"
   },
   "start_time": "2021-08-23T05:22:16.315050",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}