{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f25de925",
   "metadata": {
    "papermill": {
     "duration": 0.010153,
     "end_time": "2021-08-22T18:32:47.074069",
     "exception": false,
     "start_time": "2021-08-22T18:32:47.063916",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Quadratic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8c3c05c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:32:47.101803Z",
     "iopub.status.busy": "2021-08-22T18:32:47.100888Z",
     "iopub.status.idle": "2021-08-22T18:32:49.560781Z",
     "shell.execute_reply": "2021-08-22T18:32:49.561509Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.47895,
     "end_time": "2021-08-22T18:32:49.561875",
     "exception": false,
     "start_time": "2021-08-22T18:32:47.082925",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fbdc1f20",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:32:49.584589Z",
     "iopub.status.busy": "2021-08-22T18:32:49.583704Z",
     "iopub.status.idle": "2021-08-22T18:32:49.589954Z",
     "shell.execute_reply": "2021-08-22T18:32:49.590528Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.019641,
     "end_time": "2021-08-22T18:32:49.590801",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.571160",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "417b6c18",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:32:49.614051Z",
     "iopub.status.busy": "2021-08-22T18:32:49.613154Z",
     "iopub.status.idle": "2021-08-22T18:32:49.619919Z",
     "shell.execute_reply": "2021-08-22T18:32:49.620502Z"
    },
    "papermill": {
     "duration": 0.021284,
     "end_time": "2021-08-22T18:32:49.620789",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.599505",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Quadratic\"\n",
    "wide_energy_range = True\n",
    "x_scale = \"linear\"\n",
    "y_scale = \"linear\"\n",
    "linear_range = True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "eea6b651",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:32:49.646999Z",
     "iopub.status.busy": "2021-08-22T18:32:49.646076Z",
     "iopub.status.idle": "2021-08-22T18:32:49.652684Z",
     "shell.execute_reply": "2021-08-22T18:32:49.653267Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.023622,
     "end_time": "2021-08-22T18:32:49.653553",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.629931",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1aa4b52",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.009131,
     "end_time": "2021-08-22T18:32:49.671792",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.662661",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e85bdf83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:32:49.700700Z",
     "iopub.status.busy": "2021-08-22T18:32:49.699737Z",
     "iopub.status.idle": "2021-08-22T18:32:49.703494Z",
     "shell.execute_reply": "2021-08-22T18:32:49.704080Z"
    },
    "papermill": {
     "duration": 0.023147,
     "end_time": "2021-08-22T18:32:49.704365",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.681218",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A Quadratic function</li>\n",
       "\n",
       "<li>formula: $ a + b \\cdot x + c \\cdot x^2 $</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>a: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: coefficient</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>b: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: coefficient</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>c: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: coefficient</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A Quadratic function\n",
       "  * formula: $ a + b \\cdot x + c \\cdot x^2 $\n",
       "  * parameters:\n",
       "    * a:\n",
       "      * value: 1.0\n",
       "      * desc: coefficient\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * b:\n",
       "      * value: 1.0\n",
       "      * desc: coefficient\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * c:\n",
       "      * value: 1.0\n",
       "      * desc: coefficient\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5af3fa00",
   "metadata": {
    "papermill": {
     "duration": 0.052166,
     "end_time": "2021-08-22T18:32:49.766355",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.714189",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "15af5814",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:32:49.795414Z",
     "iopub.status.busy": "2021-08-22T18:32:49.793637Z",
     "iopub.status.idle": "2021-08-22T18:32:49.954067Z",
     "shell.execute_reply": "2021-08-22T18:32:49.954961Z"
    },
    "papermill": {
     "duration": 0.179003,
     "end_time": "2021-08-22T18:32:49.955246",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.776243",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13ca1628",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.010778,
     "end_time": "2021-08-22T18:32:49.976888",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.966110",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1e7648bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:32:50.025595Z",
     "iopub.status.busy": "2021-08-22T18:32:50.005290Z",
     "iopub.status.idle": "2021-08-22T18:32:50.378833Z",
     "shell.execute_reply": "2021-08-22T18:32:50.379788Z"
    },
    "papermill": {
     "duration": 0.392716,
     "end_time": "2021-08-22T18:32:50.380083",
     "exception": false,
     "start_time": "2021-08-22T18:32:49.987367",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "199f22ef",
   "metadata": {
    "papermill": {
     "duration": 0.011844,
     "end_time": "2021-08-22T18:32:50.403831",
     "exception": false,
     "start_time": "2021-08-22T18:32:50.391987",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c4f96a14",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:32:50.604471Z",
     "iopub.status.busy": "2021-08-22T18:32:50.578996Z",
     "iopub.status.idle": "2021-08-22T18:32:50.729016Z",
     "shell.execute_reply": "2021-08-22T18:32:50.730026Z"
    },
    "papermill": {
     "duration": 0.274194,
     "end_time": "2021-08-22T18:32:50.730309",
     "exception": false,
     "start_time": "2021-08-22T18:32:50.456115",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 5.024657,
   "end_time": "2021-08-22T18:32:51.150111",
   "environment_variables": {},
   "exception": null,
   "input_path": "Quadratic.ipynb",
   "output_path": "../docs/notebooks/Quadratic.ipynb",
   "parameters": {
    "func_name": "Quadratic",
    "linear_range": true,
    "wide_energy_range": true,
    "x_scale": "linear",
    "y_scale": "linear"
   },
   "start_time": "2021-08-22T18:32:46.125454",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}