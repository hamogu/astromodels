{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "879872c2",
   "metadata": {
    "papermill": {
     "duration": 0.00971,
     "end_time": "2021-08-22T17:51:31.060985",
     "exception": false,
     "start_time": "2021-08-22T17:51:31.051275",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Inverse cutoff powerlaw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5b0da511",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:51:31.090674Z",
     "iopub.status.busy": "2021-08-22T17:51:31.089608Z",
     "iopub.status.idle": "2021-08-22T17:51:33.610111Z",
     "shell.execute_reply": "2021-08-22T17:51:33.610712Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.541571,
     "end_time": "2021-08-22T17:51:33.611073",
     "exception": false,
     "start_time": "2021-08-22T17:51:31.069502",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b0e28f5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:51:33.633696Z",
     "iopub.status.busy": "2021-08-22T17:51:33.632815Z",
     "iopub.status.idle": "2021-08-22T17:51:33.639043Z",
     "shell.execute_reply": "2021-08-22T17:51:33.639623Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.020115,
     "end_time": "2021-08-22T17:51:33.639895",
     "exception": false,
     "start_time": "2021-08-22T17:51:33.619780",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b45ca855",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:51:33.662163Z",
     "iopub.status.busy": "2021-08-22T17:51:33.661243Z",
     "iopub.status.idle": "2021-08-22T17:51:33.668012Z",
     "shell.execute_reply": "2021-08-22T17:51:33.668599Z"
    },
    "papermill": {
     "duration": 0.020555,
     "end_time": "2021-08-22T17:51:33.668875",
     "exception": false,
     "start_time": "2021-08-22T17:51:33.648320",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Inverse_cutoff_powerlaw\"\n",
    "wide_energy_range = True\n",
    "x_scale = \"log\"\n",
    "y_scale = \"log\"\n",
    "linear_range = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8d25645f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:51:33.694152Z",
     "iopub.status.busy": "2021-08-22T17:51:33.693236Z",
     "iopub.status.idle": "2021-08-22T17:51:33.699929Z",
     "shell.execute_reply": "2021-08-22T17:51:33.700517Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.023037,
     "end_time": "2021-08-22T17:51:33.700794",
     "exception": false,
     "start_time": "2021-08-22T17:51:33.677757",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bafb1355",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.008879,
     "end_time": "2021-08-22T17:51:33.718534",
     "exception": false,
     "start_time": "2021-08-22T17:51:33.709655",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0da7cae1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:51:33.751148Z",
     "iopub.status.busy": "2021-08-22T17:51:33.749762Z",
     "iopub.status.idle": "2021-08-22T17:51:33.757806Z",
     "shell.execute_reply": "2021-08-22T17:51:33.758437Z"
    },
    "papermill": {
     "duration": 0.030404,
     "end_time": "2021-08-22T17:51:33.758723",
     "exception": false,
     "start_time": "2021-08-22T17:51:33.728319",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: instead of cutoff energy energy parameter xc, b = 1/xc is used]</li>\n",
       "\n",
       "<li>formula: $ K~\\frac{x}{piv}^{index}~\\exp{-x~\\b} $</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>K: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: Normalization (differential flux at the pivot value)</li>\n",
       "\n",
       "<li>min_value: 1e-30</li>\n",
       "\n",
       "<li>max_value: 1000.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: True</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>piv: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: Pivot value</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: False</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>index: \n",
       "<ul>\n",
       "\n",
       "<li>value: -2.0</li>\n",
       "\n",
       "<li>desc: Photon index</li>\n",
       "\n",
       "<li>min_value: -10.0</li>\n",
       "\n",
       "<li>max_value: 10.0</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.2</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>b: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: inverse cutoff energy i.e 1/xc</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description:\n",
       "    * A power law multiplied by an exponential cutoff [Note: instead of cutoff energy\n",
       "      * energy parameter xc, b = 1/xc is used]\n",
       "  * formula: $ K~\\frac{x}{piv}^{index}~\\exp{-x~\\b} $\n",
       "  * parameters:\n",
       "    * K:\n",
       "      * value: 1.0\n",
       "      * desc: Normalization (differential flux at the pivot value)\n",
       "      * min_value: 1.0e-30\n",
       "      * max_value: 1000.0\n",
       "      * unit: ''\n",
       "      * is_normalization: true\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * piv:\n",
       "      * value: 1.0\n",
       "      * desc: Pivot value\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: false\n",
       "    * index:\n",
       "      * value: -2.0\n",
       "      * desc: Photon index\n",
       "      * min_value: -10.0\n",
       "      * max_value: 10.0\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.2\n",
       "      * free: true\n",
       "    * b:\n",
       "      * value: 1.0\n",
       "      * desc: inverse cutoff energy i.e 1/xc\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17bafa89",
   "metadata": {
    "papermill": {
     "duration": 0.009638,
     "end_time": "2021-08-22T17:51:33.778298",
     "exception": false,
     "start_time": "2021-08-22T17:51:33.768660",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2c4e0e64",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:51:33.828743Z",
     "iopub.status.busy": "2021-08-22T17:51:33.807453Z",
     "iopub.status.idle": "2021-08-22T17:51:35.147887Z",
     "shell.execute_reply": "2021-08-22T17:51:35.148484Z"
    },
    "papermill": {
     "duration": 1.360749,
     "end_time": "2021-08-22T17:51:35.148787",
     "exception": false,
     "start_time": "2021-08-22T17:51:33.788038",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9014d3c7",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.010731,
     "end_time": "2021-08-22T17:51:35.170720",
     "exception": false,
     "start_time": "2021-08-22T17:51:35.159989",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1601569b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:51:35.233136Z",
     "iopub.status.busy": "2021-08-22T17:51:35.198435Z",
     "iopub.status.idle": "2021-08-22T17:51:35.865330Z",
     "shell.execute_reply": "2021-08-22T17:51:35.866266Z"
    },
    "papermill": {
     "duration": 0.68526,
     "end_time": "2021-08-22T17:51:35.866576",
     "exception": false,
     "start_time": "2021-08-22T17:51:35.181316",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b102befd",
   "metadata": {
    "papermill": {
     "duration": 0.011229,
     "end_time": "2021-08-22T17:51:35.889305",
     "exception": false,
     "start_time": "2021-08-22T17:51:35.878076",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d2c35604",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:51:35.944187Z",
     "iopub.status.busy": "2021-08-22T17:51:35.940408Z",
     "iopub.status.idle": "2021-08-22T17:51:36.517774Z",
     "shell.execute_reply": "2021-08-22T17:51:36.518487Z"
    },
    "papermill": {
     "duration": 0.618328,
     "end_time": "2021-08-22T17:51:36.518844",
     "exception": false,
     "start_time": "2021-08-22T17:51:35.900516",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.060468,
   "end_time": "2021-08-22T17:51:37.124770",
   "environment_variables": {},
   "exception": null,
   "input_path": "Inverse_cutoff_powerlaw.ipynb",
   "output_path": "../docs/notebooks/Inverse_cutoff_powerlaw.ipynb",
   "parameters": {
    "func_name": "Inverse_cutoff_powerlaw",
    "linear_range": false,
    "wide_energy_range": true,
    "x_scale": "log",
    "y_scale": "log"
   },
   "start_time": "2021-08-22T17:51:30.064302",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}