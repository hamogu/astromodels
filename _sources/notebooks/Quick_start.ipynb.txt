{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ee54ca92",
   "metadata": {},
   "source": [
    "# Quick start\n",
    "\n",
    "In this quick tutorial we will learn how to create a simple model with one point source, with a power law spectrum. You can of course use any function instead of the power law. Use ```list_models()``` to obtain a list of available models.\n",
    "\n",
    "Let’s define the model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "69be8841",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:27:43.144485Z",
     "iopub.status.busy": "2021-08-22T17:27:43.139205Z",
     "iopub.status.idle": "2021-08-22T17:27:45.346521Z",
     "shell.execute_reply": "2021-08-22T17:27:45.347237Z"
    }
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "from astromodels import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e2185837",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:27:45.353789Z",
     "iopub.status.busy": "2021-08-22T17:27:45.352952Z",
     "iopub.status.idle": "2021-08-22T17:27:45.359550Z",
     "shell.execute_reply": "2021-08-22T17:27:45.360112Z"
    }
   },
   "outputs": [],
   "source": [
    "test_source = PointSource('test_source',ra=123.22, dec=-13.56, spectral_shape=Powerlaw_flux())\n",
    "\n",
    "my_model = Model(test_source)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ce6f324",
   "metadata": {},
   "source": [
    "Now let’s use it:\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "17a97f07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:27:45.365189Z",
     "iopub.status.busy": "2021-08-22T17:27:45.364347Z",
     "iopub.status.idle": "2021-08-22T17:27:46.664991Z",
     "shell.execute_reply": "2021-08-22T17:27:46.665593Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Differential flux @ 1 keV : 1.010 photons / ( cm2 s keV)\n"
     ]
    }
   ],
   "source": [
    "# Get and print the differential flux at 1 keV:\n",
    "\n",
    "differential_flux_at_1_keV = my_model.test_source(1.0)\n",
    "\n",
    "print(\"Differential flux @ 1 keV : %.3f photons / ( cm2 s keV)\" % differential_flux_at_1_keV)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db9ef71c",
   "metadata": {},
   "source": [
    "Evaluate the model on an array of 100 energies logarithmically distributed between 1 and 100 keV and plot it"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6c518dc5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T17:27:46.673980Z",
     "iopub.status.busy": "2021-08-22T17:27:46.673119Z",
     "iopub.status.idle": "2021-08-22T17:27:49.419391Z",
     "shell.execute_reply": "2021-08-22T17:27:49.420115Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Differential flux (ph./cm2/s/keV)')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 748.8x655.2 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "\n",
    "# Set up the energies\n",
    "\n",
    "energies = np.logspace(0,2,100)\n",
    "\n",
    "# Get the differential flux\n",
    "\n",
    "differential_flux = my_model.test_source(energies)\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.loglog(energies, differential_flux)\n",
    "\n",
    "ax.set_xlabel(\"Energy (keV)\")\n",
    "ax.set_ylabel(\"Differential flux (ph./cm2/s/keV)\")"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
