{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3d339269",
   "metadata": {
    "papermill": {
     "duration": 0.009204,
     "end_time": "2021-08-22T18:08:33.747080",
     "exception": false,
     "start_time": "2021-08-22T18:08:33.737876",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Quartic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0d147b9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:08:33.773959Z",
     "iopub.status.busy": "2021-08-22T18:08:33.773063Z",
     "iopub.status.idle": "2021-08-22T18:08:36.188255Z",
     "shell.execute_reply": "2021-08-22T18:08:36.188866Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 2.433762,
     "end_time": "2021-08-22T18:08:36.189415",
     "exception": false,
     "start_time": "2021-08-22T18:08:33.755653",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "from astromodels.functions.function import _known_functions\n",
    "\n",
    "\n",
    "from jupyterthemes import jtplot\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f25154e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:08:36.216194Z",
     "iopub.status.busy": "2021-08-22T18:08:36.215320Z",
     "iopub.status.idle": "2021-08-22T18:08:36.221854Z",
     "shell.execute_reply": "2021-08-22T18:08:36.222451Z"
    },
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.02093,
     "end_time": "2021-08-22T18:08:36.222734",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.201804",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "func_name = \"TbAbs\"\n",
    "\n",
    "x_scale=\"log\"\n",
    "y_scale=\"log\"\n",
    "\n",
    "linear_range = False\n",
    "\n",
    "wide_energy_range = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1dd5d80b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:08:36.244746Z",
     "iopub.status.busy": "2021-08-22T18:08:36.243867Z",
     "iopub.status.idle": "2021-08-22T18:08:36.250419Z",
     "shell.execute_reply": "2021-08-22T18:08:36.249786Z"
    },
    "papermill": {
     "duration": 0.019201,
     "end_time": "2021-08-22T18:08:36.250659",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.231458",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "func_name = \"Quartic\"\n",
    "wide_energy_range = True\n",
    "x_scale = \"linear\"\n",
    "y_scale = \"linear\"\n",
    "linear_range = True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2becd3aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:08:36.275112Z",
     "iopub.status.busy": "2021-08-22T18:08:36.274207Z",
     "iopub.status.idle": "2021-08-22T18:08:36.281204Z",
     "shell.execute_reply": "2021-08-22T18:08:36.282391Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden",
    "papermill": {
     "duration": 0.023403,
     "end_time": "2021-08-22T18:08:36.282725",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.259322",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "func = _known_functions[func_name]()\n",
    "\n",
    "if wide_energy_range:\n",
    "\n",
    "    energy_grid = np.geomspace(1e2,1e4,500)\n",
    "    \n",
    "else:\n",
    "    \n",
    "    energy_grid = np.geomspace(2e-1,1e1,1000)\n",
    "\n",
    "if linear_range:\n",
    "\n",
    "\tenergy_grid = np.linspace(-5,5,1000)\n",
    "\n",
    "    \n",
    "blue = \"#4152E3\"\n",
    "red = \"#E3414B\"\n",
    "green = \"#41E39E\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbbfd739",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.008556,
     "end_time": "2021-08-22T18:08:36.300381",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.291825",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "72dd79f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:08:36.329161Z",
     "iopub.status.busy": "2021-08-22T18:08:36.328217Z",
     "iopub.status.idle": "2021-08-22T18:08:36.333491Z",
     "shell.execute_reply": "2021-08-22T18:08:36.332954Z"
    },
    "papermill": {
     "duration": 0.024555,
     "end_time": "2021-08-22T18:08:36.333735",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.309180",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ul>\n",
       "\n",
       "<li>description: A quartic function</li>\n",
       "\n",
       "<li>formula: $ a + b \\cdot x + c \\cdot x^2 + d \\cdot x^3 + e \\cdot x^4$</li>\n",
       "\n",
       "<li>parameters: \n",
       "<ul>\n",
       "\n",
       "<li>a: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: coefficient</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>b: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: coefficient</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>c: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: coefficient</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>d: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: coefficient</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "<li>e: \n",
       "<ul>\n",
       "\n",
       "<li>value: 1.0</li>\n",
       "\n",
       "<li>desc: coefficient</li>\n",
       "\n",
       "<li>min_value: None</li>\n",
       "\n",
       "<li>max_value: None</li>\n",
       "\n",
       "<li>unit: </li>\n",
       "\n",
       "<li>is_normalization: False</li>\n",
       "\n",
       "<li>delta: 0.1</li>\n",
       "\n",
       "<li>free: True</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n",
       "\n",
       "</li>\n",
       "\n",
       "</ul>\n"
      ],
      "text/plain": [
       "  * description: A quartic function\n",
       "  * formula: $ a + b \\cdot x + c \\cdot x^2 + d \\cdot x^3 + e \\cdot x^4$\n",
       "  * parameters:\n",
       "    * a:\n",
       "      * value: 1.0\n",
       "      * desc: coefficient\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * b:\n",
       "      * value: 1.0\n",
       "      * desc: coefficient\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * c:\n",
       "      * value: 1.0\n",
       "      * desc: coefficient\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * d:\n",
       "      * value: 1.0\n",
       "      * desc: coefficient\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true\n",
       "    * e:\n",
       "      * value: 1.0\n",
       "      * desc: coefficient\n",
       "      * min_value: null\n",
       "      * max_value: null\n",
       "      * unit: ''\n",
       "      * is_normalization: false\n",
       "      * delta: 0.1\n",
       "      * free: true"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "func.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a8929e3",
   "metadata": {
    "papermill": {
     "duration": 0.009583,
     "end_time": "2021-08-22T18:08:36.352816",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.343233",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Shape \n",
    "\n",
    "The shape of the function. \n",
    "\n",
    "*If this is not a photon model but a prior or linear function then ignore the units as these docs are auto-generated*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "afc261d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:08:36.435207Z",
     "iopub.status.busy": "2021-08-22T18:08:36.425815Z",
     "iopub.status.idle": "2021-08-22T18:08:36.554755Z",
     "shell.execute_reply": "2021-08-22T18:08:36.555396Z"
    },
    "papermill": {
     "duration": 0.193389,
     "end_time": "2021-08-22T18:08:36.555740",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.362351",
     "status": "completed"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "\n",
    "ax.plot(energy_grid, func(energy_grid), color=blue)\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(\"photon flux\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "694539a7",
   "metadata": {
    "lines_to_next_cell": 0,
    "papermill": {
     "duration": 0.010333,
     "end_time": "2021-08-22T18:08:36.576743",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.566410",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## F$_{\\nu}$\n",
    "\n",
    "The F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4f97b9cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:08:36.624973Z",
     "iopub.status.busy": "2021-08-22T18:08:36.624064Z",
     "iopub.status.idle": "2021-08-22T18:08:36.971880Z",
     "shell.execute_reply": "2021-08-22T18:08:36.973990Z"
    },
    "papermill": {
     "duration": 0.387443,
     "end_time": "2021-08-22T18:08:36.974564",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.587121",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid * func(energy_grid), red)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"energy flux (F$_{\\nu}$)\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67d80c7e",
   "metadata": {
    "papermill": {
     "duration": 0.011357,
     "end_time": "2021-08-22T18:08:36.997611",
     "exception": false,
     "start_time": "2021-08-22T18:08:36.986254",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## $\\nu$F$_{\\nu}$\n",
    "\n",
    "The $\\nu$F$_{\\nu}$ shape of the photon model\n",
    "*if this is not a photon model, please ignore this auto-generated plot*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "48077187",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-08-22T18:08:37.027666Z",
     "iopub.status.busy": "2021-08-22T18:08:37.026724Z",
     "iopub.status.idle": "2021-08-22T18:08:37.197433Z",
     "shell.execute_reply": "2021-08-22T18:08:37.198008Z"
    },
    "papermill": {
     "duration": 0.189613,
     "end_time": "2021-08-22T18:08:37.198289",
     "exception": false,
     "start_time": "2021-08-22T18:08:37.008676",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.plot(energy_grid, energy_grid**2 * func(energy_grid), color=green)\n",
    "\n",
    "\n",
    "ax.set_xlabel(\"energy (keV)\")\n",
    "ax.set_ylabel(r\"$\\nu$F$_{\\nu}$\")\n",
    "ax.set_xscale(x_scale)\n",
    "ax.set_yscale(y_scale)\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 4.845391,
   "end_time": "2021-08-22T18:08:37.748918",
   "environment_variables": {},
   "exception": null,
   "input_path": "Quartic.ipynb",
   "output_path": "../docs/notebooks/Quartic.ipynb",
   "parameters": {
    "func_name": "Quartic",
    "linear_range": true,
    "wide_energy_range": true,
    "x_scale": "linear",
    "y_scale": "linear"
   },
   "start_time": "2021-08-22T18:08:32.903527",
   "version": "2.3.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}